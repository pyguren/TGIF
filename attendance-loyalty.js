var camara = "senate";
if (document.title.includes("House")) {
    camara = "house";
}
console.log(camara)
// ///////////////////////////////////////////////////////////////////////////////////////////////////////
// ///////////Se crea funcion para tomar el Json desde internet sin descargarlo y asignarle la info a la 
// //////////variable data. Obtencion de response de function fetch/////////////////////////////////////


function datos_tr() {
    fetch("https://api.propublica.org/congress/v1/113/" + camara + "/members.json", {
            headers: {
                "X-API-Key": "cXoTamEdUJPPtf8JIluMvmkN1YmidwlDfKWYRNVq"
            },
        })
        .then(function (response) {
            return response.json();
        })
        .then(function (json) {
            a.datosTabla = json.results[0].members;
            a.respaldo = json.results[0].members;
            llamada();
        })
        .catch(function (error) {

        });
};
datos_tr();

///////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////Declaro todas mis variables dentro de Vue con corchetes vacios///////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

var a = new Vue({
    el: '#tablaVue',
    data: {
        datosTabla: [],
        respaldo: [],
        republican: [],
        democrat: [],
        independent: [],
        repvotedwithpct: 0,
        demvotedwithpct: 0,
        idvotedwithpct: 0,
        mostEngaged: [],
        leastEngaged: [],
        mostLoyal: [],
        leastLoyal: [],
    },
});

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////Se crea fincion que engloba a todas las funciones/////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////

function llamada() {
    a.republican = a.datosTabla.filter(member => member.party == "R");
    a.democrat = a.datosTabla.filter(member => member.party == "D");
    a.independent = a.datosTabla.filter(member => member.party == "ID");
    a.repvotedwithpct = porcentajes(a.republican);
    a.demvotedwithpct = porcentajes(a.democrat);
    a.idvotedwithpct = porcentajes(a.independent);
    a.mostEngaged = engaged(a.datosTabla);
    a.leastEngaged = engaged2(a.datosTabla);
    a.mostLoyal = loyalty(a.datosTabla);
    a.leastLoyal = loyalty2(a.datosTabla);

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////PORCENTAJES DE VOTOS CON EL PARTIDO/////////////////////////////////////////////////////////
//////////////////////////////////////////////TABLA 1 ATTENDANCE Y LOYALTY...////////////////////////////////////////////////////////////

function porcentajes(n) {

    if (n.length != 0) {
        let i = n.map(member => member.votes_with_party_pct).reduce((a, b) => (a + b) || 0)
        return (i / n.length).toFixed(2)
    } else return 0;

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////MOST ENGAGED//////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////TABLA 2 ATTENDANCE/////////////////////////////////////////////////////////////////////////////

function engaged(n) {
    let i = n.sort((a, b) => a.missed_votes_pct - b.missed_votes_pct).reverse();
    return i.slice(0, (0.1 * i.length));
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////LEAST ENGAGED/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////TABLA 3 ATTENDANCE////////////////////////////////////////////////////////////////////////////

function engaged2(n) {
    let i = n.sort((a, b) => a.missed_votes_pct - b.missed_votes_pct);
    return i.slice(0, (0.1 * i.length));
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////PARTY LOYALTY/////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////TABLA 2 LOYALTY //most loyal////////////////////////////////////////////////////////////////////////////////

function loyalty(n) {
    let i = n.sort((a, b) => a.votes_with_party_pct - b.votes_with_party_pct);
    return i.reverse().slice(0, (0.1 * i.length));
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////PARTY LOYALTY/////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////TABLA 3 LOYALTY //least loyal//////////////////////////////////////////////////////////////

function loyalty2(n) {
    let i = n.sort((a, b) => a.votes_with_party_pct - b.votes_with_party_pct);
    return i.slice(0, (0.1 * i.length));
}